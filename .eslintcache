[{"C:\\Project-React\\00_Learning\\16_react_formik\\src\\index.js":"1","C:\\Project-React\\00_Learning\\16_react_formik\\src\\reportWebVitals.js":"2","C:\\Project-React\\00_Learning\\16_react_formik\\src\\App.js":"3","C:\\Project-React\\00_Learning\\16_react_formik\\src\\components\\YoutubeForm.js":"4"},{"size":500,"mtime":1608046308975,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608046308975,"results":"7","hashOfConfig":"6"},{"size":481,"mtime":1611951914518,"results":"8","hashOfConfig":"6"},{"size":1598,"mtime":1611948945045,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1w9gjgu",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Project-React\\00_Learning\\16_react_formik\\src\\index.js",[],["21","22"],"C:\\Project-React\\00_Learning\\16_react_formik\\src\\reportWebVitals.js",[],"C:\\Project-React\\00_Learning\\16_react_formik\\src\\App.js",["23"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport YoutubeForm from \"./components/YoutubeForm\";\nimport { Helmet } from \"react-helmet\";\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Helmet>\n        <title>Hello World</title>\n        <meta name='description' content='this is a glitch i wonder if htere'/>\n        <meta name='author' content='ibrahim yaacob'/>\n        <body class='megalodone'/>\n      </Helmet>\n\n      <YoutubeForm />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Project-React\\00_Learning\\16_react_formik\\src\\components\\YoutubeForm.js",["24"],"import React from \"react\";\r\nimport { useFormik, Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup'\r\n\r\nconst YoutubeForm = () => {\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    channel: \"\",\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required('Required'),\r\n    email: Yup.string()\r\n      .email('Invalid email format')\r\n      .required('Required'),\r\n    channel: Yup.string().required('Required'),\r\n  })\r\n  \r\n\r\n  return (\r\n    <Formik \r\n      initialValues={initialValues}\r\n      validationSchema = {validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <Form>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <Field\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            \r\n          />\r\n          <ErrorMessage name='name'/>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <Field\r\n            type=\"text\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n          />\r\n          <ErrorMessage name='email'/>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"channel\">Channel</label>\r\n          <Field\r\n            type=\"text\"\r\n            id=\"channel\"\r\n            name=\"channel\"\r\n          />\r\n          <ErrorMessage name='channel'/>\r\n        </div>\r\n        <button type='submit'>Submit</button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default YoutubeForm;\r\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":12},{"ruleId":"29","severity":1,"message":"33","line":2,"column":10,"nodeType":"31","messageId":"32","endLine":2,"endColumn":19},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useFormik' is defined but never used.","no-global-assign","no-unsafe-negation"]